@model GuessingGame.Models.GameModel

@{
    ViewBag.Title = "Index";
}

<h2>Guessing Game</h2>

@if (!(ViewBag.Win ?? false))
{
    if (ViewBag.Win != null && !ViewBag.Win)
    {
        <h2>Sorry, @Model.PlayerName, @Model.Guess is incorrect.</h2>
    }
    @*label for model*@
    @*validation summary gives bulleted list of messages*@
using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })

        <div class="form-group">
            @**m.playername is a Lambda Expression *@
            @Html.LabelFor(
                    m => m.PlayerName, @*Defaults are anonymous types*@
                         htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">
                @Html.EditorFor(
                        m => m.PlayerName,
                        new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(
                  m => m.PlayerName,
                      "",
                         new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(
        m => m.Guess,
        htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">
                @Html.EditorFor(
                       m => m.Guess,
                        new { htmlAttributes = new { @class = "form-control" } })
                      @Html.ValidationMessageFor(
                      m => m.Guess,
                           "",
                   new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guess" class="btn btn-default" />
            </div>
        </div>
    </div>

    }
}
else
{
    <h2> That's it, @Model.PlayerName! The answer was @Model.Guess! </h2>
}
<div>

    @Html.ActionLink("Start Over", "index")
</div>